/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        layer_hold: layer_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_HOLD";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Escape {
            bindings = <&kp ESC>;
            key-positions = <19 20>;
            timeout-ms = <100>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  Q  |  W  |  E  |  R  |    T    |   |  Y  |  U   |  I  |  O  |  P  | ESC |
            // | CTRL |  A  |  S  |  D  |  F  |    G    |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |    B    |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | ALT/ENT |   | HYPER/SPC | BKSP  | RSE |

            bindings = <
&kp TAB         &kp Q  &kp W  &kp E             &kp R                      &kp T                &kp Y                    &kp U      &kp I            &kp O    &kp P     &kp DEL
&sk LEFT_ALT    &kp A  &kp S  &kp D             &kp F                      &kp G                &kp H                    &kp J      &kp K            &kp L    &kp SEMI  &kp RIGHT_ALT
&sk LEFT_SHIFT  &kp Z  &kp X  &kp C             &kp V                      &kp B                &kp N                    &kp M      &kp COMMA        &kp DOT  &kp FSLH  &sl 3
                              &sk LEFT_CONTROL  &tp LEFT_COMMAND KP_ENTER  &layer_hold 1 TAB    &layer_hold 2 BACKSPACE  &kp SPACE  &sk RIGHT_SHIFT
            >;
        };

        Number_Layer {
            // -----------------------------------------------------------------------------------------
            // |      |  !  |  @  |  #  |  $  |    %     |   |  ^  |  &  |  *  |  (  |  )  |   \   |
            // |      |  1  |  2  |  3  |  4  |    5     |   |  -  |  =  |  `  |  [  |  ]  |  "|"  |
            // | SHFT |  6  |  7  |  8  |  9  |    0     |   |  _  |  +  |  ~  |  {  |  }  | RSHFT |
            //                     | GUI |     | ALT/ENT |   | HYPER/SPACE | BKSP |    |

            bindings = <
&kp TAB       &kp EXCL   &kp AT            &kp HASH              &kp DLLR                &kp PRCNT         &kp CARET                &kp AMPS           &kp KP_MULTIPLY        &kp GRAVE     &none          &kp DEL
&kp LEFT_ALT  &kp N1     &kp N2            &kp N3                &kp N4                  &kp N5            &kp NUMBER_6             &kp NUMBER_7       &kp NUMBER_8           &kp NUMBER_9  &kp N0         &kp RIGHT_ALT
&kp LSHFT     &kp MINUS  &kp SINGLE_QUOTE  &kp LEFT_PARENTHESIS  &kp LEFT_BRACKET        &kp LEFT_BRACE    &kp RIGHT_BRACE          &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp EQUAL     &kp BACKSLASH  &mo 3
                                           &kp ESCAPE            &tp LEFT_COMMAND ENTER  &kp TAB           &layer_hold 1 BACKSPACE  &kp SPACE          &kp RIGHT_SHIFT
            >;
        };

        Navigation_Layer {
            // -----------------------------------------------------------------------------------------
            // |       |  F1  |  F2  |  F3  |  F4  |  F5 |            |  F6  |  F7  |  F8  |  F9  |  F10  |   |
            // |       | Prev | Next | Vol - | Vol + | Play/Pause |   |      | LFT | DWN |  UP | RGT |     |     |
            // | BTCLR | BT1 | BT2 | BT3 | BT4 | BT5 |   |            |     |     |     |     |     |     |
            //                    |     |     |    |                  |     |     |     |

            bindings = <
&kp TAB         &trans    &trans   &trans            &trans                  &trans         &trans            &trans          &trans           &trans             &trans           &kp DEL
&kp LEFT_ALT    &kp HOME  &kp END  &trans            &kp PAGE_DOWN           &kp PAGE_UP    &kp LEFT          &kp DOWN        &kp UP           &kp RIGHT          &trans           &kp RIGHT_ALT
&kp LEFT_SHIFT  &trans    &trans   &kp K_COPY        &kp K_PASTE             &trans         &kp K_PLAY_PAUSE  &kp K_PREVIOUS  &kp K_NEXT       &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &mo 3
                                   &kp LEFT_CONTROL  &tp LEFT_COMMAND ENTER  &kp TAB        &kp BACKSPACE     &kp SPACE       &kp RIGHT_SHIFT
            >;
        };

        Functional_Layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans   &trans   &trans
&kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans   &trans   &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };
};
